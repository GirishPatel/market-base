# docker compose

services:
  # MySQL Database
  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: mydb
      MYSQL_USER: myuser
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-ppassword"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:9.1.3
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cat/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
    env_file:
      - .env
    environment:
      # Docker-specific overrides
      - NODE_ENV=production
      - DATABASE_URL=mysql://myuser:password@db:3306/mydb
      - ELASTICSEARCH_NODE=http://elasticsearch:9200
    ports:
      - "3001:3001"
    depends_on:
      db:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    volumes:
      - ./apps/backend/logs:/app/logs
    command: >
      sh -c "
        npx prisma migrate deploy &&
        npx prisma db seed &&
        npm start
      "

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: apps/frontend/Dockerfile
    environment:
      # Docker-specific overrides (if any)
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:3001
    ports:
      - "3000:3000"
    depends_on:
      - backend

volumes:
  mysql_data:
  elasticsearch_data: